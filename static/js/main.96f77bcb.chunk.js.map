{"version":3,"sources":["Input.js","App.js","index.js"],"names":["Input","checkFunction","status","type","onChange","checked","App","state","todos","id","todo","input","handleChange","event","value","target","setState","handleSubmit","preventDefault","alert","prevState","Date","now","handleDelete","filter","handleSave","todoState","localStorage","setItem","JSON","stringify","handleRetrieve","savedTodo","getItem","retrieveTodo","parse","handleCheck","newTodos","map","Object","assign","handleTodo","undone","handleComplete","done","console","log","this","classes","props","className","Paper","onSubmit","placeholder","aria-label","aria-describedby","List","ListItem","key","ListItemText","ListItemSecondaryAction","IconButton","button","color","onClick","React","Component","withStyles","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96f77bcb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Input({ checkFunction, status }){\r\n  return(\r\n    <input type=\"checkbox\" onChange={checkFunction} checked={status}/>\r\n  )\r\n}\r\n\r\nexport { Input };\r\n","import React from 'react';\r\nimport { IconButton, ListItemSecondaryAction, ListItemText, List, ListItem, Paper } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Delete  from '@material-ui/icons/Delete';\r\nimport { Input } from './Input';\r\nimport './App.css';\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    color: \"orange\"\r\n  }\r\n});\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    todos: [\r\n      {\r\n        id: 1,\r\n        todo: 'Hello twe twe',\r\n        status: false\r\n      }\r\n    ],\r\n    input: \"\"\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({\r\n      input: value\r\n    })\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.input === '') {\r\n      alert(\"Input must not be empty\");\r\n    } else {\r\n      this.setState(prevState => {\r\n        return {\r\n          todos: [...prevState.todos, {id: Date.now(), todo: this.state.input, status: false}],\r\n          input: ''\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    this.setState(prevState => {\r\n      return {\r\n        todos: prevState.todos.filter(todo => todo.id !== id )\r\n      }\r\n    })\r\n  };\r\n\r\n  handleSave = () => {\r\n    let todoState = this.state.todos;\r\n    localStorage.setItem('todos', JSON.stringify(todoState));\r\n    alert('Saved Successfully!!');\r\n  };\r\n\r\n  handleRetrieve = () => {\r\n    let savedTodo = localStorage.getItem('todos');\r\n    let retrieveTodo = JSON.parse(savedTodo);\r\n    this.setState({\r\n      todos: retrieveTodo\r\n    })\r\n  };\r\n\r\n  handleCheck = (id) => {\r\n    let data = this.state.todos;\r\n    let newTodos = data.map(todo => {\r\n      if (todo.id === id) {\r\n        return Object.assign({}, todo, {status: !todo.status})\r\n      }\r\n      return todo;\r\n    });\r\n    this.setState({\r\n      todos: newTodos\r\n    })\r\n  };\r\n\r\n  handleTodo = () => {\r\n    let savedTodo = localStorage.getItem('todos');\r\n    let todos = JSON.parse(savedTodo);\r\n    let undone = todos.filter(todo => todo.status === false);\r\n    this.setState({\r\n      todos: undone\r\n    })\r\n  }\r\n\r\n  handleComplete = () => {\r\n    let savedTodo = localStorage.getItem('todos');\r\n    let todos = JSON.parse(savedTodo);\r\n    let done = todos.filter(todo => todo.status === true);\r\n    this.setState({\r\n      todos: done\r\n    })\r\n  }\r\n\r\n  render(){\r\n    console.log(this.state.todos)\r\n    const { classes } = this.props;\r\n    const { todos, input } = this.state;\r\n    return(\r\n      <div className=\"app\">\r\n        <Paper className=\"paper\">\r\n          <form onSubmit={this.handleSubmit}>\r\n            <div className=\"input-group mb-3\">\r\n              <input onChange={this.handleChange} value={this.state.input} type=\"text\" className=\"form-control\" placeholder=\"What do you want to do?\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" />\r\n              <div className=\"input-group-append\">\r\n                <button type=\"submit\" className=\"custom-button\">Add</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n\r\n          <List>\r\n            {\r\n              todos.map(todo => (\r\n                <ListItem key={todo.id}>\r\n                  <Input\r\n                    checkFunction={() => this.handleCheck(todo.id)}\r\n                    status={todo.status}\r\n                  />\r\n                  <ListItemText className=\"list\">{todo.todo}</ListItemText>\r\n                  <ListItemSecondaryAction>\r\n                    <IconButton\r\n                      className={classes.button}\r\n                      color=\"secondary\"\r\n                      onClick={() => this.handleDelete(todo.id)}\r\n                    ><Delete /></IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              ))\r\n            }\r\n          </List>\r\n\r\n          <div className=\"button-group\">\r\n            <button type=\"button\" className=\"custom-button\" onClick={this.handleSave}>\r\n              <i className=\"far fa-save\"></i>Save\r\n            </button>\r\n            <button type=\"button\" className=\"custom-button\" onClick={this.handleRetrieve}>\r\n              <i className=\"fas fa-server\"></i>Retrieve\r\n            </button>\r\n            <button type=\"button\" className=\"custom-button\" onClick={this.handleTodo}>\r\n              <i className=\"fas fa-times\"></i>Todo\r\n            </button>\r\n            <button type=\"button\" className=\"custom-button\" onClick={this.handleComplete}>\r\n              <i className=\"fas fa-check\"></i>Complete\r\n            </button>\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}